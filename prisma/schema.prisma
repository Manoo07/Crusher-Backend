// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String   @id @default(uuid())
  name      String   @unique @db.VarChar(100)
  ownerId   String   @unique @map("owner_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  owner         User           @relation("OrganizationOwner", fields: [ownerId], references: [id])
  users         User[]         @relation("OrganizationMembers")
  truckEntries  TruckEntry[]
  materialRates MaterialRate[]
  otherExpenses OtherExpense[]

  // Indexes
  @@index([ownerId])
  @@map("organizations")
}

model User {
  id               String    @id @default(uuid())
  organizationId   String?   @map("organization_id")
  username         String    @unique @db.VarChar(15)
  passwordHash     String    @map("password_hash")
  role             UserRole  @default(user)
  isActive         Boolean   @default(true) @map("is_active")
  lastLogin        DateTime? @map("last_login")
  profileImage     String?   @map("profile_image")
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  // Relations
  organization      Organization? @relation("OrganizationMembers", fields: [organizationId], references: [id])
  ownedOrganization Organization? @relation("OrganizationOwner")
  truckEntries      TruckEntry[]
  otherExpenses     OtherExpense[]

  // Indexes
  @@index([username])
  @@index([organizationId])
  @@index([role])
  @@index([isActive])
  @@index([lastLogin])
  @@map("users")
}

model MaterialRate {
  id             String   @id @default(uuid())
  organizationId String   @map("organization_id")
  materialType   String   @map("material_type") @db.VarChar(50)
  ratePerUnit    Decimal  @map("rate_per_unit") @db.Decimal(10, 2)
  unitType       String   @default("Load") @map("unit_type") @db.VarChar(20)
  isActive       Boolean  @default(true) @map("is_active")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // Relations
  organization Organization @relation(fields: [organizationId], references: [id])

  // Indexes
  @@index([organizationId])
  @@index([materialType])
  @@index([isActive])
  @@unique([organizationId, materialType])
  @@map("material_rates")
}

model TruckEntry {
  id             String      @id @default(uuid())
  organizationId String      @map("organization_id")
  userId         String      @map("user_id")
  truckNumber    String      @map("truck_number") @db.VarChar(20)
  truckName      String      @map("truck_name") @db.VarChar(50)
  entryType      EntryType   @map("entry_type")
  materialType   String?     @map("material_type") @db.VarChar(50)
  units          Decimal     @db.Decimal(5, 2)
  ratePerUnit    Decimal     @map("rate_per_unit") @db.Decimal(10, 2)
  totalAmount    Decimal     @map("total_amount") @db.Decimal(12, 2)
  truckImage     String?     @map("truck_image")
  entryDate      DateTime    @map("entry_date") @db.Date
  entryTime      DateTime    @map("entry_time") @db.Time
  status         EntryStatus @default(active)
  notes          String?     @db.Text
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")

  // Relations
  organization Organization @relation(fields: [organizationId], references: [id])
  user         User         @relation(fields: [userId], references: [id])

  // Indexes
  @@index([organizationId])
  @@index([userId])
  @@index([entryType])
  @@index([materialType])
  @@index([truckNumber])
  @@index([entryDate])
  @@index([status])
  @@index([organizationId, entryDate])
  @@index([userId, entryDate])
  @@map("truck_entries")
}

model OtherExpense {
  id             String   @id @default(uuid())
  organizationId String   @map("organization_id")
  userId         String   @map("user_id")
  expenseType    String   @map("expense_type") @db.VarChar(100)
  amount         Decimal  @db.Decimal(10, 2)
  description    String?  @db.Text
  date           DateTime @db.Date
  isActive       Boolean  @default(true) @map("is_active")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // Relations
  organization Organization @relation(fields: [organizationId], references: [id])
  user         User         @relation(fields: [userId], references: [id])

  // Indexes
  @@index([organizationId])
  @@index([userId])
  @@index([date])
  @@index([isActive])
  @@index([organizationId, date])
  @@map("other_expenses")
}

// Enums
enum UserRole {
  owner
  user
}

enum EntryType {
  Sales     @map("Sales")
  RawStone  @map("Raw Stone")
}

enum EntryStatus {
  active
  deleted
}
